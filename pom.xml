<!-- 
Copyright (C) 2012 Royal Dutch Army

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>nl.mindef.c2sc.nbs</groupId>
	<artifactId>olsr.pud.uplink.server</artifactId>
	<version>2.0.0</version>
	<packaging>jar</packaging>

	<name>olsr.pud.uplink.server</name>
	<url>http://www.mindef.nl</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<project.source>1.6</project.source>
		<project.target>1.6</project.target>

		<!-- can be none, or a combination of source,lines,vars -->
		<project.debug.level>source,lines,vars</project.debug.level>

		<project.mainclass>nl.mindef.c2sc.nbs.olsr.pud.uplink.server.Main</project.mainclass>

		<project.configdir>config</project.configdir>
		<project.dist.directory>${project.build.directory}/dist</project.dist.directory>
		<project.etcdir>/etc/init.d/</project.etcdir>
		<project.usrdir>/usr/lib/</project.usrdir>
		<project.libdir>libs</project.libdir>
		<project.scripts.directory>scripts</project.scripts.directory>
		<project.spring.directory>src/main/resources/META-INF/spring</project.spring.directory>
		<project.javadoc.directory>doc/javadoc</project.javadoc.directory>

		<project.wireformat.c.dir>${project.basedir}/../nbsolsrd/lib/pud/wireformat/lib</project.wireformat.c.dir>
		<project.wireformat.c.so>libOlsrdPudWireFormat.so</project.wireformat.c.so>
		<project.wireformat.dir>${project.basedir}/../nbsolsrd/lib/pud/wireformat-java/lib</project.wireformat.dir>
		<project.wireformat.so>libOlsrdPudWireFormatJava.so</project.wireformat.so>
		<project.wireformat.jar.group>org.olsr.plugin.pud</project.wireformat.jar.group>
		<project.wireformat.jar.name>OlsrdPudWireFormatJava_Internal</project.wireformat.jar.name>
		<project.wireformat.jar.version>2.0.0</project.wireformat.jar.version>
		<project.wireformat.jar>OlsrdPudWireFormatJava.jar</project.wireformat.jar>
		<project.gitsha>${project.build.directory}/gitsha</project.gitsha>
		<project.startscript>relayserver</project.startscript>
		<project.sysvscript>ahrrs</project.sysvscript>
		<project.rs.properties>relayserver.properties</project.rs.properties>
		<project.log.properties>log4j.properties</project.log.properties>
		<project.var.log.dir>/var/log/</project.var.log.dir>
		<project.var.run.dir>/var/run/</project.var.run.dir>

		<!-- DEBUG settings -->
		<project.faker.use.boolean>false</project.faker.use.boolean>
	</properties>

	<issueManagement>
		<url>https://github.com/AHR-Project/pudUplinkServer/issues</url>
	</issueManagement>

	<scm>
		<connection>scm:git:git://github.com/AHR-Project/pudUplinkServer.git</connection>
		<developerConnection>scm:git:git@github.com:AHR-Project/pudUplinkServer.git</developerConnection>
		<url>https://github.com/AHR-Project/pudUplinkServer</url>
	</scm>

	<profiles>
		<profile>
			<id>usr</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<project.usrlocaldir>/usr/lib/pudUplinkServer/</project.usrlocaldir>
			</properties>
		</profile>
		<profile>
			<id>ahr</id>
			<properties>
				<project.usrlocaldir>/usr/local/lib/pudUplinkServer/</project.usrlocaldir>
			</properties>
		</profile>
	</profiles>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<descriptors>
							<descriptor>src/main/assembly/assembly.xml</descriptor>
						</descriptors>
						<finalName>${project.artifactId}</finalName>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id> <!-- this is used for inheritance merges -->
							<phase>package</phase> <!-- bind to the packaging phase -->
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.4.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.google.code.maven-replacer-plugin</groupId>
										<artifactId>maven-replacer-plugin</artifactId>
										<versionRange>[1.4.1,)</versionRange>
										<goals>
											<goal>replace</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.2.1,)</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>properties-maven-plugin</artifactId>
										<versionRange>[0.0.0,)</versionRange>
										<goals>
											<goal>read-project-properties</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>

							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<excludeFilterFile>${project.basedir}/findbugs/findbugs.exclude.xml</excludeFilterFile>
					<includeFilterFile>${project.basedir}/findbugs/findbugs.include.xml</includeFilterFile>
					<xmlOutput>true</xmlOutput>
					<findbugsXmlOutputDirectory>${project.basedir}/target/findbugs</findbugsXmlOutputDirectory>
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>verify-findbug</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>xml-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>transform</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<transformationSets>
						<transformationSet>
							<dir>${project.basedir}/target/findbugs</dir>
							<outputDir>${project.basedir}/target/findbugs/html</outputDir>
							<stylesheet>default.xsl</stylesheet>
							<!--
							<stylesheet>plain.xsl</stylesheet>
							<stylesheet>fancy.xsl</stylesheet>
							<stylesheet>fancy-hist.xsl</stylesheet>
							<stylesheet>summary.xsl</stylesheet>
							-->
							<fileMappers>
								<fileMapper
									implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
									<targetExtension>.html</targetExtension>
								</fileMapper>
							</fileMappers>
						</transformationSet>
					</transformationSets>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.google.code.findbugs</groupId>
						<artifactId>findbugs</artifactId>
						<version>2.0.0</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<source>${project.source}</source>
					<target>${project.target}</target>
					<debug>true</debug>
					<debuglevel>${project.debug.level}</debuglevel>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<executions>
					<execution>
						<id>clean-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<followSymLinks>false</followSymLinks>
							<filesets>
								<fileset>
									<directory>${project.dist.directory}</directory>
								</fileset>
								<fileset>
									<directory>${basedir}/${project.javadoc.directory}</directory>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>${project.libdir}/</classpathPrefix>
							<mainClass>${project.mainclass}</mainClass>
						</manifest>
						<manifestEntries>
							<Class-Path>${project.configdir}/ ${project.libdir}/${project.wireformat.jar}</Class-Path>
							<Git-Descriptor>${git.descriptor}</Git-Descriptor>
							<Git-SHA>${git.sha}</Git-SHA>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeArtifactIds>${project.wireformat.jar.name}</excludeArtifactIds>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<outputDirectory>${project.dist.directory}${project.usrlocaldir}${project.libdir}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>copy-resources-jar</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${project.dist.directory}${project.usrlocaldir}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>${project.build.finalName}.jar</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-config</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${project.dist.directory}${project.usrlocaldir}${project.configdir}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.configdir}</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-wireformat-c</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${project.dist.directory}${project.usrdir}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.wireformat.c.dir}</directory>
									<includes>
										<include>${project.wireformat.c.so}</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-wireformat</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${project.dist.directory}${project.usrlocaldir}${project.libdir}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.wireformat.dir}</directory>
									<includes>
										<include>${project.wireformat.so}</include>
										<include>${project.wireformat.jar}</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-initd-scripts</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${project.dist.directory}${project.etcdir}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.scripts.directory}/target</directory>
									<includes>
										<include>${project.sysvscript}</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-scripts</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${project.dist.directory}${project.usrlocaldir}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.scripts.directory}/target</directory>
									<includes>
										<include>${project.startscript}</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>maven-replacer-plugin</artifactId>
				<version>1.4.1</version>
				<executions>
					<execution>
						<id>replace-faker-use</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>${project.spring.directory}/private.properties</file>
							<regexFlags>
								<regexFlag>MULTILINE</regexFlag>
							</regexFlags>
							<replacements>
								<replacement>
									<token>^\s*faker\.use\s*=.*</token>
									<value>faker.use=${project.faker.use.boolean}</value>
								</replacement>
							</replacements>
						</configuration>
					</execution>
					<execution>
						<id>replace-log4j-properties</id>
						<phase>package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>${project.dist.directory}</basedir>
							<file>${project.usrlocaldir}${project.configdir}/${project.log.properties}</file>
							<regex>true</regex>
							<regexFlags>
								<regexFlag>MULTILINE</regexFlag>
							</regexFlags>
							<replacements>
								<replacement>
									<token>=(\s*relayserver[^\.]*\.log)\s*$</token>
									<value>=${project.var.log.dir}$1</value>
								</replacement>
							</replacements>
						</configuration>
					</execution>
					<execution>
						<id>replace-relayserver-properties</id>
						<phase>package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>${project.dist.directory}</basedir>
							<file>${project.usrlocaldir}${project.configdir}/${project.rs.properties}</file>
							<regex>true</regex>
							<regexFlags>
								<regexFlag>MULTILINE</regexFlag>
							</regexFlags>
							<replacements>
								<replacement>
									<token>=(\s*relayserver[^\.]*\.log)\s*$</token>
									<value>=${project.var.log.dir}$1</value>
								</replacement>
								<replacement>
									<token>=(\s*relayserver[^\.]*\.(dot|svg))\s*$</token>
									<value>=${project.var.run.dir}$1</value>
								</replacement>
							</replacements>
						</configuration>
					</execution>
					<execution>
						<id>replace-relayserver-script-vars</id>
						<phase>package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>${project.dist.directory}</basedir>
							<file>${project.usrlocaldir}${project.startscript}</file>
							<regex>false</regex>
							<replacements>
								<replacement>
									<token>__project.build.finalName__</token>
									<value>${project.build.finalName}</value>
								</replacement>
								<replacement>
									<token>__project.libdir__</token>
									<value>${project.libdir}</value>
								</replacement>
							</replacements>
						</configuration>
					</execution>
					<execution>
						<id>replace-relayserver-initd-script-vars</id>
						<phase>package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>${project.dist.directory}</basedir>
							<file>${project.etcdir}${project.sysvscript}</file>
							<regex>false</regex>
							<replacements>
								<replacement>
									<token>__project.startscript__</token>
									<value>${project.usrlocaldir}${project.startscript}</value>
								</replacement>
							</replacements>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<id>exec-getGitSha</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${project.scripts.directory}/getGitSha</executable>
							<arguments>
								<argument>${project.gitsha}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>exec-chmod</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>chmod</executable>
							<arguments>
								<argument>755</argument>
								<argument>${project.dist.directory}${project.etcdir}${project.sysvscript}</argument>
								<argument>${project.dist.directory}${project.usrdir}${project.wireformat.c.so}</argument>
								<argument>${project.dist.directory}${project.usrlocaldir}${project.startscript}</argument>
								<argument>${project.dist.directory}${project.usrlocaldir}${project.libdir}/${project.wireformat.so}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${project.gitsha}</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<destDir>${basedir}/${project.javadoc.directory}</destDir>
					<reportOutputDirectory>${basedir}/${project.javadoc.directory}</reportOutputDirectory>
					<outputDirectory>${basedir}/${project.javadoc.directory}</outputDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.1.3.Final</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.0.Final</version>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.3.2</version>
		</dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>3.1.1.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.4</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.4</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.4</version>
		</dependency>

		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.16.1-GA</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>

		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.5</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>


		<dependency>
			<groupId>${project.wireformat.jar.group}</groupId>
			<artifactId>${project.wireformat.jar.name}</artifactId>
			<version>${project.wireformat.jar.version}</version>
			<scope>system</scope>
			<systemPath>${project.wireformat.dir}/${project.wireformat.jar}</systemPath>
		</dependency>

	</dependencies>
</project>
